{"version":3,"sources":["mealdb-api.js","pages/Home.js","components/RecipeIngredients.js","components/RecipeInstructions.js","pages/Recipe.js","pages/Timer.js","components/IfOffline.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["baseUrl","getLatest","getRecipe","a","fetch","request","json","data","recipes","meals","map","m","normalizeMeal","recipeId","recipe","shift","meal","newMeal","id","idMeal","name","strMeal","category","strCategory","origin","strArea","instructions","strInstructions","split","filter","i","trim","thumbnail","strMealThumb","tags","strTags","youtube","strYoutube","ingredients","url","strSource","dateModified","push","ingredient","measure","Home","props","state","isLoading","mealdb","console","error","this","setState","className","Helmet","to","style","backgroundImage","React","Component","RecipeIngredients","ix","RecipeInstructions","line","Recipe","share","e","preventDefault","navigator","title","text","document","location","href","then","log","alert","match","params","onClick","Timer","start","window","Notification","permission","requestPermission","timer","timeLeft","countdownInterval","setInterval","clearInterval","showNotification","serviceWorker","getRegistration","registration","body","vibrate","handleChange","target","value","type","min","max","step","onChange","IfOffline","useState","onLine","setOnLine","useEffect","addEventListener","removeEventListener","history","createBrowserHistory","ReactGA","initialize","pageview","pathname","search","listen","App","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","process","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.80a8d413.chunk.js","sourcesContent":["import \"isomorphic-fetch\";\r\n\r\nconst baseUrl = \"https://www.themealdb.com/api/json/v1/1\";\r\n\r\nexport default {\r\n  getLatest,\r\n  getRecipe,\r\n};\r\n\r\nasync function getLatest() {\r\n  const request = await fetch(`${baseUrl}/search.php?f=b`);\r\n  const data = await request.json();\r\n  const recipes = data.meals.map((m) => normalizeMeal(m));\r\n\r\n  return recipes;\r\n}\r\n\r\nasync function getRecipe(recipeId) {\r\n  const request = await fetch(`${baseUrl}/lookup.php?i=${recipeId}`);\r\n  const data = await request.json();\r\n  if (!data.meals) return null;\r\n  const recipe = normalizeMeal(data.meals.shift());\r\n\r\n  return recipe;\r\n}\r\n\r\nfunction normalizeMeal(meal) {\r\n  const newMeal = {};\r\n\r\n  newMeal.id = meal.idMeal;\r\n  newMeal.name = meal.strMeal;\r\n  newMeal.category = meal.strCategory;\r\n  newMeal.origin = meal.strArea;\r\n  newMeal.instructions = meal.strInstructions\r\n    .split(\"\\n\")\r\n    .filter((i) => i.trim() !== \"\");\r\n  newMeal.thumbnail = meal.strMealThumb;\r\n  newMeal.tags = meal.strTags ? meal.strTags.split(\",\") : [];\r\n  newMeal.youtube = meal.strYoutube;\r\n  newMeal.ingredients = [];\r\n  newMeal.url = meal.strSource;\r\n  newMeal.dateModified = meal.dateModified;\r\n\r\n  for (let i = 1; i <= 20; i++) {\r\n    if (meal[`strIngredient${i}`] !== \"\" && meal[`strMeasure${i}`] !== \"\") {\r\n      newMeal.ingredients.push({\r\n        ingredient: meal[`strIngredient${i}`],\r\n        measure: meal[`strMeasure${i}`],\r\n      });\r\n    }\r\n  }\r\n\r\n  return newMeal;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport mealdb from \"../mealdb-api\";\r\n\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { recipes: null, isLoading: true };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    var recipes;\r\n    try {\r\n      recipes = await mealdb.getLatest();\r\n    } catch (e) {\r\n      console.error(e);\r\n      recipes = null;\r\n    }\r\n    this.setState({ recipes, isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    const { recipes, isLoading } = this.state;\r\n\r\n    if (isLoading) {\r\n      return <div className=\"message\">Cargando...</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>Recetas</title>\r\n        </Helmet>\r\n\r\n        <div className=\"recipes\">\r\n          {recipes &&\r\n            recipes.map((recipe) => (\r\n              <Link\r\n                to={`/recipe/${recipe.id}`}\r\n                className=\"recipe\"\r\n                key={recipe.id}\r\n              >\r\n                <span\r\n                  className=\"bg\"\r\n                  style={{ backgroundImage: `url(${recipe.thumbnail})` }}\r\n                ></span>\r\n                <span className=\"info\">\r\n                  <h2>{recipe.name}</h2>\r\n                </span>\r\n              </Link>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class RecipeIngredients extends React.Component {\r\n  render() {\r\n    const { ingredients } = this.props;\r\n\r\n    return (\r\n      <div className=\"ingredients\">\r\n        <h2>Ingredients</h2>\r\n        <ul>\r\n          {ingredients.map((i, ix) => (\r\n            <li key={ix}>\r\n              {i.ingredient}: {i.measure}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class RecipeInstructions extends React.Component {\r\n  render() {\r\n    const { instructions } = this.props;\r\n\r\n    return (\r\n      <div className=\"instructions\">\r\n        <h2>Instructions</h2>\r\n\r\n        <div className=\"steps\">\r\n          {instructions.map((line, ix) => (\r\n            <div className=\"step\" key={ix}>\r\n              <div className=\"number\">{ix + 1}</div>\r\n              <div className=\"text\">{line}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport mealdb from \"../mealdb-api\";\r\nimport RecipeIngredients from \"../components/RecipeIngredients\";\r\nimport RecipeInstructions from \"../components/RecipeInstructions\";\r\n\r\nexport default class Recipe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { recipe: null, isLoading: true };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    var recipe = null;\r\n    try {\r\n      recipe = await mealdb.getRecipe(this.props.match.params.recipeId);\r\n    } catch (e) {\r\n      recipe = null;\r\n    }\r\n    this.setState({ recipe, isLoading: false });\r\n  }\r\n\r\n  share = (e) => {\r\n    e.preventDefault();\r\n    if (!navigator.share) {\r\n      alert(\"Tu navegador no soporta Web Share Api\");\r\n      return;\r\n    }\r\n\r\n    const { recipe } = this.state;\r\n\r\n    navigator\r\n      .share({\r\n        title: ` ${recipe.name}`,\r\n        text: \"Receta deliciosa\",\r\n        url: document.location.href,\r\n      })\r\n      .then(() => console.log(\"Contenido compartido\"));\r\n  };\r\n\r\n  render() {\r\n    const { recipe, isLoading } = this.state;\r\n\r\n    if (isLoading) {\r\n      return <div className=\"message\">Cargando...</div>;\r\n    } else if (recipe === null) {\r\n      return <div className=\"message\">Hubo un problema :(</div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"Recipe\">\r\n        <Helmet>\r\n          <title>{recipe.name}</title>\r\n        </Helmet>\r\n\r\n        <div\r\n          className=\"hero\"\r\n          style={{ backgroundImage: `url(${recipe.thumbnail})` }}\r\n        />\r\n\r\n        <div className=\"title\">\r\n          <div className=\"info\">\r\n            <h1>{recipe.name}</h1>\r\n            <p>{recipe.origin}</p>\r\n          </div>\r\n          <div>\r\n            <a href=\"/\" onClick={this.share}>\r\n              Compartir\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <RecipeIngredients ingredients={recipe.ingredients} />\r\n\r\n        <RecipeInstructions instructions={recipe.instructions} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { timer: 3, timeLeft: 0 };\r\n  }\r\n\r\n  start = async () => {\r\n    if (!(\"Notification\" in window) || !(\"serviceWorker\" in navigator)) {\r\n      return alert(\"Tu browser no soporta notificaciones\");\r\n    }\r\n\r\n    if (Notification.permission === \"default\") {\r\n      await Notification.requestPermission();\r\n    }\r\n\r\n    if (Notification.permission === \"blocked\") {\r\n      return alert(\"Bloqueaste las notificaciones :(\");\r\n    }\r\n\r\n    if (Notification.permission !== \"granted\") {\r\n      return;\r\n    }\r\n\r\n    var timer = this.state.timer;\r\n    this.setState({ timeLeft: timer });\r\n\r\n    var countdownInterval = setInterval(() => {\r\n      timer = timer - 1;\r\n      this.setState({ timeLeft: timer });\r\n      if (timer <= 0) {\r\n        clearInterval(countdownInterval);\r\n        this.showNotification();\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  showNotification = async () => {\r\n    const registration = await navigator.serviceWorker.getRegistration();\r\n    if (!registration) return alert(\"No hay un Service Worker :(\");\r\n\r\n    registration.showNotification(\"Listo el timer!\", {\r\n      body: \"Ding ding ding\",\r\n      vibrate: [1000, 500, 1000],\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ timer: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { timer, timeLeft } = this.state;\r\n\r\n    return (\r\n      <div className=\"Timer\">\r\n        <div className=\"name\">Timer</div>\r\n        {timeLeft === 0 ? (\r\n          <div className=\"center\">\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"999\"\r\n              step=\"1\"\r\n              value={timer}\r\n              onChange={this.handleChange}\r\n            />\r\n            <button onClick={this.start}>Start</button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"timeLeft\">{timeLeft}s</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport const IfOffline = () => {\r\n  const [onLine, setOnLine] = useState(navigator ? navigator.onLine : true);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"online\", () => setOnLine(true));\r\n    window.addEventListener(\"offline\", () => setOnLine(false));\r\n    return () => {\r\n      window.removeEventListener(\"online\");\r\n      window.removeEventListener(\"offline\");\r\n    };\r\n  }, []);\r\n\r\n  return <>{!onLine && <span>Offline</span>}</>;\r\n};\r\n","import React from \"react\";\nimport { Router, Route, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Recipe from \"./pages/Recipe\";\nimport Timer from \"./pages/Timer\";\nimport { IfOffline } from \"./components/IfOffline\";\nimport \"./App.css\";\n\nimport { createBrowserHistory } from \"history\";\nimport ReactGA from \"react-ga\";\n\nconst history = createBrowserHistory();\n\nReactGA.initialize(\"UA-000000-01\");\n\n// Para analizar la pagina inicial\nReactGA.pageview(window.location.pathname + window.location.search);\n\n// Para analizar las otras paginas\nhistory.listen(function (location) {\n  ReactGA.pageview(window.location.pathname + window.location.search);\n});\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <div>\n          <header>\n            <Link to=\"/\">\n              Recetas <IfOffline />\n            </Link>\n            <Link to=\"/timer\" className=\"timerLink\">\n              ⏱\n            </Link>\n          </header>\n\n          <main>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/recipe/:recipeId\" component={Recipe} />\n            <Route path=\"/timer\" component={Timer} />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}